def tst(xp, yp, x, y): # Создаем функцию проверки принадлежности точки многовершиннику (ф-я принимает координаты точки P и массывы координат точек по оси x и по оси y)
    count = 0 # счетчик
    flag = False # флаг опускаем вниз
    prov = 0
    for i in range(len(x)): # пробегаемся по циклу (кол-во проходов равно кол-ву точек)
        if (y[i-1] == y[i] and x[i-1] <= xp <= x[i]) or (x[i-1] == x[i] and y[i-1] <= yp <= y[i]): # проверяем горизонтальные и вертикальные линии
            flag = True # если тока лежит на линии, то мы поднимаем флаг
            prov = 1
            break # принудительно выходим из цикла. Дальше нет смысла пробегать по массиву (тут точка уже лежит на линии)
        else:
            if x[i-1] != x[i]:
                if (((y[i] - y[i-1]) / (x[i] - x[i-1])) != 0) and ((x[i] - x[i-1]) != 0): # проверяем деление на ноль ()
                    if xp == (yp - ((y[i-1] - ((y[i] - y[i-1]) / (x[i] -x[i-1])) * x[i-1]))) / ((y[i] - y[i-1]) / (x[i] -x[i-1])): #проверяем принадлежность на наклонных линиях
                        flag = True # если тока лежит на линии, то мы поднимаем флаг
                        prov = 2
                        break # принудительно выходим из цикла. Дальше нет смысла пробегать по массиву (тут точка уже лежит на линии)
                else:
                    if (((y[i]<=yp and yp<y[i-1]) or (y[i-1]<=yp and yp<y[i])) and # проверяем пересечение прямой, проходящей через точку xp, и сторон многовершинника
                        (xp > (x[i-1] - x[i]) * (yp - y[i]) / (y[i-1] - y[i]) + x[i])): # xt - это формула после знака >
                        count += 1
                        prov = 3
    if flag == True: # проверяем нахождение точки на линии (флаг поднят True)
        return "Точка на линии", prov
    elif count % 2 == 0: # если четное то снаружи, иначе внутри
        return "Точка снаружи", prov
    else:
        return "Точка внутри", prov


x = [1, 4, 5, 8, 8, 5] # задаем массив координат по ои X (любое кол-во точек)
y = [2, 5, 1, 5, 3, 0] # задаем массив координат по оси Y (кол-во координат должно совпадать с кол-вом координат X)
xp = 8
yp = 4
x.append(x[0]) # добавляем первую координату в конец массива чтобы замкнуть многовершинник (последняя координата совпадает с первой)
y.append(y[0]) # аналогично с координатой y

print(tst(xp, yp, x, y)) # выводим на печать результат функции